<?xml version="1.0"?>
<RBProject version="2009r2">
<block type="Module" ID="1247719427">
 <ObjName>rbrwGraphicsEnv</ObjName>
 <ObjContainerID>795249001</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>rbrwEnvironment</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>heightOfTextStyle</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function heightOfTextStyle(ts as rbrwTextStyle) As double</SourceLine>
   <SourceLine>return ts.TextHeight(rbrwCurrentDraw.CurrentGraphics)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>ts as rbrwTextStyle</ItemParams>
  <ItemResult>double</ItemResult>
 </Method>
 <Method>
  <ItemName>makeRenderDispatch</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub makeRenderDispatch(drawable as rbrwDrawable)</SourceLine>
   <SourceLine>// now the magic bit.</SourceLine>
   <SourceLine>// by dereferencing this, we make an overriding function match against the virtual</SourceLine>
   <SourceLine>// method that takes an oofRepWinEnv&amp;.</SourceLine>
   <SourceLine>// The implication is that, if we add an environment, each drawable must have a makeRender</SourceLine>
   <SourceLine>// added to match, or it will not be rendered (the base empty method will be invoked).</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// eg: if we need to handle printing and previewing differently on the Mac, we would end up</SourceLine>
   <SourceLine>// with a makeRender(const oofRepMacPrint&amp;) and makeRender(const oofRepMacGUIPreviewPP&amp;)</SourceLine>
   <SourceLine>// for each oofRepDrawable</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// The alternative would be to have each environment know each drawable. That is far</SourceLine>
   <SourceLine>// less extensible - users can add their own drawables that we wouldn't know about,</SourceLine>
   <SourceLine>// so the environment classes wouldn't be closed for extension.</SourceLine>
   <SourceLine>drawable.makeRender(self)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>drawable as rbrwDrawable</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>renderType</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function renderType() As rbrwRenderT</SourceLine>
   <SourceLine>return rbrwRenderT.renderGraphics</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>rbrwRenderT</ItemResult>
 </Method>
 <Method>
  <ItemName>startEnvironment</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub startEnvironment()</SourceLine>
   <SourceLine>rbrwCurrentDraw.resetCoordinates</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>calcPageHeight</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function calcPageHeight() As double</SourceLine>
   <SourceLine>return mPaperRect.Height</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>double</ItemResult>
 </Method>
 <Method>
  <ItemName>calcPageWidth</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function calcPageWidth() As double</SourceLine>
   <SourceLine>return mPaperRect.Width</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>double</ItemResult>
 </Method>
 <Method>
  <ItemName>canDraw</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function canDraw() As boolean</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Note>
  <ItemName>About</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>About</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>based on oofRepWinEnv</NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Property>
  <ItemName>mPaperRect</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mPaperRect As rbrwRect</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mPaperRect As rbrwRect</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>2147483648</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
 </ViewBehavior>
</block>
</RBProject>
