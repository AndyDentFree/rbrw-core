<?xml version="1.0"?>
<RBProject version="2009r2">
<block type="Module" ID="-1072991221">
 <ObjName>rbrwBlock</ObjName>
 <ObjContainerID>883326124</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>rbrwDrawable</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>MoveDownAfter</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MoveDownAfter(b as boolean) As rbrwBlock</SourceLine>
   <SourceLine>mMoveDownAfter = b</SourceLine>
   <SourceLine>return self  ' so can chain methods</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>b as boolean</ItemParams>
  <ItemResult>rbrwBlock</ItemResult>
 </Method>
 <Method>
  <ItemName>ShouldMoveDownAfterInLinearBand</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ShouldMoveDownAfterInLinearBand() As Boolean</SourceLine>
   <SourceLine>return mMoveDownAfter</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Height</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Height(g as Graphics) As Double</SourceLine>
   <SourceLine>return 0  '  should override</SourceLine>
   <SourceLine>' implemented here to make compiler happy, no abstract classes in RB!</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>g as Graphics</ItemParams>
  <ItemResult>Double</ItemResult>
 </Method>
 <Method>
  <ItemName>Render</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Render(g as Graphics, xOffset as double = 0, yOffset as double = 0)</SourceLine>
   <SourceLine>'  should override</SourceLine>
   <SourceLine>' implemented here to make compiler happy, no abstract classes in RB!</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>g as Graphics, xOffset as double = 0, yOffset as double = 0</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Width</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Width(g as Graphics) As Double</SourceLine>
   <SourceLine>return 0  '  should override</SourceLine>
   <SourceLine>' implemented here to make compiler happy, no abstract classes in RB!</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>g as Graphics</ItemParams>
  <ItemResult>Double</ItemResult>
 </Method>
 <Method>
  <ItemName>clone</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function clone() As rbrwBlock</SourceLine>
   <SourceLine>break  // pure virtual base method, should not end up here</SourceLine>
   <SourceLine>return nil  // subclass should override</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>rbrwBlock</ItemResult>
 </Method>
 <Method>
  <ItemName>textStyle</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function textStyle() As rbrwTextStyle</SourceLine>
   <SourceLine>if mStyle is nil then</SourceLine>
   <SourceLine>dim drawingUs as rbrwLayoutBand = rbrwLayoutBand.currentLayout</SourceLine>
   <SourceLine>if DrawingUs is nil then</SourceLine>
   <SourceLine> return nil  ' it is legal according to original design to return nil here because we couldn't get it from a container, but see uniqueTextStyle</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>return drawingUs.textStyle</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>return mStyle</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>rbrwTextStyle</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(adoptedStyle as rbrwTextStyle)</SourceLine>
   <SourceLine>super.Constructor adoptedStyle</SourceLine>
   <SourceLine>mAlignment = blockAlignT.alignLeft</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>adoptedStyle as rbrwTextStyle</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>align</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function align(value as blockAlignT) As rbrwBlock</SourceLine>
   <SourceLine>mAlignment = value</SourceLine>
   <SourceLine>return self ' so can chain methods</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>value as blockAlignT</ItemParams>
  <ItemResult>rbrwBlock</ItemResult>
 </Method>
 <Method>
  <ItemName>fixedWidth</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function fixedWidth(value as double) As rbrwBlock</SourceLine>
   <SourceLine>mFixedWidth = value</SourceLine>
   <SourceLine>return self ' so can chain methods</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>value as double</ItemParams>
  <ItemResult>rbrwBlock</ItemResult>
 </Method>
 <Method>
  <ItemName>fixedHeight</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function fixedHeight() As double</SourceLine>
   <SourceLine>return rbrwReport.currentReport.environment.heightOfTextStyle(textStyle)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>double</ItemResult>
 </Method>
 <Method>
  <ItemName>asString</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function asString() As string</SourceLine>
   <SourceLine>return ""</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Property>
  <ItemName>mMoveDownAfter</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mMoveDownAfter As boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mMoveDownAfter As boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>mAlignment</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mAlignment As blockAlignT</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mAlignment As blockAlignT</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>align</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>align As blockAlignT</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>align As blockAlignT</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>mAlignment = value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return mAlignment</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>mFixedWidth</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mFixedWidth As double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mFixedWidth As double</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>moveDownAfter</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>moveDownAfter As boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>moveDownAfter As boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>mMoveDownAfter = value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return mMoveDownAfter</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>fixedWidth</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>fixedWidth As double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>fixedWidth As double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>mFixedWidth = value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return mFixedWidth</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>ID</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>string</ItemType>
   <EditorType>MultiLineEditor</EditorType>
   <InheritsFrom>rbrwDrawable</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>mMoveDownAfter</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>moveDownAfter</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>fixedWidth</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>double</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
</RBProject>
